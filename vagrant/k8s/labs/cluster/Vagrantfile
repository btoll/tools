BOX_IMAGE = "ubuntu/bionic64"
MASTER_COUNT = 1
WORKER_COUNT = 2
POD_CIDR = "172.18.0.0/16"
API_ADV_ADDRESS = "10.8.8.10"
MSG = "btoll"
COMMON_SCRIPT_URL = "/vagrant/scripts/common.sh"
MASTER_SCRIPT_URL = "/vagrant/scripts/master.sh"
WORKER_SCRIPT_URL = "/vagrant/scripts/worker.sh"

Vagrant.configure("2") do |config|
    config.vm.provision "shell" do |s|
        s.inline = <<-SCRIPT
            mkdir -p $HOME/.config/.kv
            cp -p #{COMMON_SCRIPT_URL} $HOME/.config/.kv/common.sh
            $HOME/.config/.kv/common.sh #{MSG}
        SCRIPT
    end

    (0..MASTER_COUNT-1).each do |i|
        config.vm.define "kv-master-#{i}" do |subconfig|
            subconfig.vm.box = BOX_IMAGE
            subconfig.vm.hostname = "kv-master-#{i}"
            subconfig.vm.network :private_network, ip: "10.8.8.#{i + 10}"
            subconfig.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--cpus", 2]
                vb.memory = 2048
            end

            # This if is here just to remember me to create a multi-master cluster
            # the behavior and overal configuration is different and this will require a HAProxy installation
            if i == 0
                subconfig.vm.provision "shell" do |s|
                    s.inline = <<-SCRIPT
                        mkdir -p $HOME/.config/.kv
                        cp -p #{MASTER_SCRIPT_URL} $HOME/.config/.kv/master.sh
                        $HOME/.config/.kv/master.sh #{MSG} #{i} #{POD_CIDR} #{API_ADV_ADDRESS}
                    SCRIPT
                end
            end
        end
    end

    (0..WORKER_COUNT-1).each do |i|
        config.vm.define "kv-worker-#{i}" do |subconfig|
            subconfig.vm.box = BOX_IMAGE
            subconfig.vm.hostname = "kv-worker-#{i}"
            subconfig.vm.network :private_network, ip: "10.8.8.#{i + 20}"
            subconfig.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--cpus", 2]
                vb.memory = 1024
            end

            subconfig.vm.provision "shell" do |s|
                s.inline = <<-SCRIPT
                    mkdir -p $HOME/.config/.kv
                    cp -p #{WORKER_SCRIPT_URL} $HOME/.config/.kv/worker.sh
                    $HOME/.config/.kv/worker.sh #{MSG} #{i} #{POD_CIDR} #{API_ADV_ADDRESS}
                SCRIPT
            end
        end
    end

    config.vm.provision "shell",
    run: "always",
    inline: "swapoff -a"
end

